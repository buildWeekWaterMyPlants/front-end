{"version":3,"sources":["hooks/useForm.js","services/axiosWithAuth.js","actions/index.js","hooks/useValidation.js","schema/loginSchema.js","components/ErrorMessage.js","components/Login.js","schema/signUpSchema.js","components/SignUp.js","hooks/useCountdown.js","components/Plant.js","schema/plantSchema.js","components/AddPlant.js","components/PlantList.js","components/Marketing.js","schema/updateUserSchema.js","components/UpdateUser.js","App.js","mock/index.js","reducers/index.js","index.js"],"names":["useForm","initialState","useState","formData","setFormData","e","target","type","name","value","checked","newValue","axiosWithAuth","token","localStorage","getItem","axios","create","headers","Authorization","baseURL","CHECK_AUTHORIZATION","START_REQUEST","AUTHENTICATE","FAILED_REQUEST","FINISH_REQUEST","UPDATE_PLANT","GET_PLANTS","GET_PLANT","DELETE_PLANT","ADD_PLANT","updateUser","userData","dispatch","put","then","res","payload","data","catch","err","finally","LOGOUT","useValidation","formValues","schema","handleChanges","formErrors","setFormErrors","disabled","setDisabled","useEffect","isValid","valid","yup","validate","errors","loginSchema","shape","username","required","password","ErrorMessage","props","Object","keys","map","index","className","initialLogin","connect","login","userInfo","post","loginData","handleChange","push","useHistory","changeAndValidate","onSubmit","preventDefault","onChange","signUpSchema","phoneNumber","initialSignUp","signUp","console","log","signUpData","msPerMinute","msPerHour","msPerDay","useCountdown","calculateMsLeft","timeLeft","setTimeLeft","calculateSecondsLeft","Math","floor","calculateMinutesLeft","calculateHoursLeft","calculateDaysLeft","daysLeft","setDaysLeft","hoursLeft","setHoursLeft","minutesLeft","setMinutesLeft","secondsLeft","setSecondsLeft","secondsPassed","setSecondsPassed","timer","setInterval","prevSeconds","clearInterval","deletePlant","id","delete","nickname","species","h2oFrequency","lastWaterTime","Date","getTime","url","useRouteMatch","msPerWatering","timeSinceWatered","now","msLeft","onClick","to","plantSchema","trim","min","oneOf","initalFormValues","addPlant","plantData","placeholder","state","plants","getPlants","get","revealForm","setRevealForm","plant","key","Marketing","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","updateUserSchema","phonenumber","initialData","userPhone","authenticated","path","exact","dummyData","makingRequest","plantToUpdate","reducer","actions","setItem","created_at","filter","removeItem","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f9587b3.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst useForm = (initialState) => {\n    const [formData, setFormData] = useState(initialState);\n\n    const handleChange = (e) => {\n        const { type, name, value, checked } = e.target;\n\n        const newValue = type === \"checkbox\" ? checked : value;\n\n        setFormData({ ...formData, [name]: newValue });\n    };\n\n    const reset = () => {\n        setFormData(initialState)\n    };\n\n    return [formData, handleChange, reset];\n}\n\nexport default useForm;","import axios from \"axios\";\n\nconst axiosWithAuth = () => {\n    const token = localStorage.getItem(\"token\");\n\n    return axios.create({\n        headers: {\n            Authorization: token\n        },\n        baseURL: \"https://watermyplantsbuildweek.herokuapp.com\"\n    })\n}\n\nexport default axiosWithAuth;","import axios from \"axios\";\nimport axiosWithAuth from \"../services/axiosWithAuth\";\n\nexport const CHECK_AUTHORIZATION = \"CHECK_AUTHORIZATION\";\nexport const checkAuth = (authenticated) => ({\n  type: CHECK_AUTHORIZATION,\n  payload: authenticated,\n});\n\nexport const START_REQUEST = \"START_REQUEST\";\nexport const AUTHENTICATE = \"AUTHENTICATE\";\nexport const FAILED_REQUEST = \"FAILED_REQUEST\";\nexport const FINISH_REQUEST = \"FINISH_REQUEST\";\n\nexport const login = (userInfo) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axios\n    .post(\"https://watermyplantsbuildweek.herokuapp.com/api/auth/login\", userInfo) \n    .then((res) => {\n      dispatch({ type: AUTHENTICATE, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const signUp = (userInfo) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axios\n    .post(\"https://watermyplantsbuildweek.herokuapp.com/api/auth/register\", userInfo) \n    .then((res) => {\n      console.log(res)\n      dispatch({ type: AUTHENTICATE, payload: res.data }); \n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const UPDATE_PLANT = \"UPDATE_PLANT\";\n\nexport const updatePlant = (plantData) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .put(`/api/plants/${plantData.id}`, plantData)\n    .then((res) => {\n      dispatch({ type: UPDATE_PLANT, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const GET_PLANTS = \"GET_PLANTS\";\n\nexport const getPlants = () => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .get(\"/api/plants\")\n    .then((res) => {\n      dispatch({ type: GET_PLANTS, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const GET_PLANT = \"GET_PLANT\";\n\nexport const getPlant = (id) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .get(`/api/plants/${id}`)\n    .then((res) => {\n      dispatch({ type: GET_PLANT, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const DELETE_PLANT = \"DELETE_PLANT\";\n\nexport const deletePlant = (id) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .delete(`/api/plants/${id}`)\n    .then((res) => {\n      dispatch({ type: DELETE_PLANT, payload: id });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const ADD_PLANT = \"ADD_PLANT\";\n\nexport const addPlant = (plantData) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .post(\"/api/plants\", plantData)\n    .then((res) => {\n      dispatch({ type: ADD_PLANT, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const UPDATE_USER = \"UPDATE_USER\";\n\nexport const updateUser = (userData) => (dispatch) => {\n  dispatch({ type: START_REQUEST });\n  axiosWithAuth()\n    .put(\"/api/user\", userData)\n    .then((res) => {\n      dispatch({ type: UPDATE_USER, payload: res.data });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err });\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n\nexport const LOGOUT = \"LOGOUT\";\n\nexport const logOut = () => (dispatch) => {\n  axios.post(\"\")\n    .then(() => {\n      dispatch({ type: LOGOUT });\n    })\n    .catch((err) => {\n      dispatch({ type: FAILED_REQUEST, payload: err })\n    })\n    .finally(() => {\n      dispatch({ type: FINISH_REQUEST })\n    })\n};\n","import * as yup from \"yup\";\nimport { useState, useEffect } from \"react\";\n\nconst useValidation = (formValues, schema, handleChanges) => {\n    const [formErrors, setFormErrors] = useState({});\n    const [disabled, setDisabled] = useState(true);\n\n    const validate = (name, value) => {\n        yup.reach(schema, name)\n            .validate(value)\n            .then(() => setFormErrors({ ...formErrors, [name]: \"\" }))\n            .catch((err) => setFormErrors({ ...formErrors, [name]: err.errors[0] }));\n    };\n\n    const changeAndValidate = (e) => {\n        handleChanges(e)\n        const { value, type, name, checked } = e.target;\n        const newValue = type === \"checkbox\" ? checked : value;\n        validate(name, newValue)\n    } \n\n    useEffect(() => {\n        schema.isValid(formValues).then((valid) => setDisabled(!valid));\n    }, [formValues, schema]);\n    \n    return [disabled, formErrors, changeAndValidate];\n};\n\nexport default useValidation;","import * as yup from 'yup';\n\nconst loginSchema = yup.object().shape({\n    username: yup\n        .string()\n        .required('Username is required'),\n    password: yup\n        .string()\n        .required('Password is required')\n})\n\nexport default loginSchema;","import React from 'react'\n\nexport default function ErrorMessage(props) {\n    const { formErrors } = props\n    return (\n        <div>\n            {Object.keys(formErrors).map((err, index) =>\n                <div key={index} className=\"text-red-500\">{formErrors[err]}</div>\n            )}\n        </div>\n    )\n}\n","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../actions\";\nimport { useHistory } from \"react-router-dom\";\nimport useValidation from \"../hooks/useValidation\";\nimport loginSchema from \"../schema/loginSchema\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst initialLogin = {\n  username: \"\",\n  password: \"\",\n};\n\nexport function Login(props) {\n  const { login } = props;\n  const [loginData, handleChange] = useForm(initialLogin);\n  const { push } = useHistory();\n  const [disabled, formErrors, changeAndValidate] = useValidation(loginData, loginSchema, handleChange);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    login(loginData)\n    push(\"/plantlist\")\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input\n             onChange={changeAndValidate}\n            type=\"text\"\n            name=\"username\"\n            value={loginData.username}\n          ></input>\n        </label>\n        <label>\n          Password:\n          <input\n        onChange={changeAndValidate}\n            type=\"password\"\n            name=\"password\"\n            value={loginData.password}\n          ></input>\n        </label>\n        <button disabled={disabled} type=\"submit\">Login</button>\n        <ErrorMessage formErrors={formErrors}/>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(null, { login })(Login);\n","import * as yup from 'yup';\n\nconst signUpSchema = yup.object().shape({\n    username: yup\n        .string()\n        .required('Username is required'),\n    password: yup\n        .string()\n        .required('Password is required'),\n    phoneNumber: yup\n        .number()\n})\n\nexport default signUpSchema;","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../actions\";\nimport { useHistory } from \"react-router-dom\";\n\nimport useValidation from \"../hooks/useValidation\";\nimport signUpSchema from \"../schema/signUpSchema\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst initialSignUp = {\n  username: \"\",\n  phoneNumber: \"\",\n  password: \"\",\n};\n\nexport function SignUp(props) {\n  const { signUp } = props;\n  const { push } = useHistory();\n  const [signUpData, handleChange] = useForm(initialSignUp);\n  const [disabled, formErrors, changeAndValidate] = useValidation(signUpData, signUpSchema, handleChange);\n  \n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    signUp(signUpData)\n    //set token to localstorage\n    push(\"/plantlist\")\n  };\n  console.log(signUpData);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Username:\n          <input \n       onChange={changeAndValidate}\n            value={signUpData.username}\n            type=\"text\" \n            name=\"username\"\n          />\n        </label>\n        <label>\n          Phone Number:\n          <input \n         onChange={changeAndValidate}\n            value={signUpData.phoneNumber}\n            type=\"tel\" \n            name=\"phoneNumber\"\n          />\n        </label>\n        <label>\n          Password:\n          <input\n          onChange={changeAndValidate}\n            value={signUpData.password}\n            type=\"password\"\n            name=\"password\"\n          />\n        </label>\n        <button disabled={disabled} type=\"submit\">Sign Up</button>\n        <ErrorMessage formErrors={formErrors}/>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(null, { signUp })(SignUp);\n","import { useState, useEffect } from \"react\";\n\nconst msPerMinute = 1000 * 60;\nconst msPerHour = msPerMinute * 60;\nconst msPerDay = msPerHour * 24;\n\nconst useCountdown = (calculateMsLeft) => {\n\n    const [timeLeft, setTimeLeft] = useState(calculateMsLeft());\n    const calculateSecondsLeft = () => Math.floor((timeLeft % msPerMinute) / 1000);\n    const calculateMinutesLeft = () => Math.floor((timeLeft % msPerHour) / msPerMinute);\n    const calculateHoursLeft = () => Math.floor((timeLeft % msPerDay) / msPerHour);\n    const calculateDaysLeft = () => Math.floor(timeLeft / msPerDay);\n    \n    const [daysLeft, setDaysLeft] = useState(calculateDaysLeft());\n    const [hoursLeft, setHoursLeft] = useState(calculateHoursLeft());\n    const [minutesLeft, setMinutesLeft] = useState(calculateMinutesLeft());\n    const [secondsLeft, setSecondsLeft] = useState(calculateSecondsLeft());\n    \n    const [secondsPassed, setSecondsPassed] = useState(0);\n    useEffect(() => {\n        const timer = setInterval(() => {\n            setSecondsPassed((prevSeconds) => prevSeconds + 1);\n        }, 1000);\n        return function () {\n            clearInterval(timer);\n        };\n    }, []);\n\n    useEffect(() => {\n        setTimeLeft(calculateMsLeft());\n        setDaysLeft(calculateDaysLeft());\n        setHoursLeft(calculateHoursLeft());\n        setMinutesLeft(calculateMinutesLeft());\n        setSecondsLeft(calculateSecondsLeft());\n    }, [secondsPassed]);\n\n    return [daysLeft, hoursLeft, minutesLeft, secondsLeft, timeLeft];\n}\n\nexport default useCountdown;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deletePlant } from \"../actions\";\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport useCountdown from \"../hooks/useCountdown\";\n\nconst msPerMinute = 1000 * 60;\nconst msPerHour = msPerMinute * 60;\nconst msPerDay = msPerHour * 24;\n\nexport function Plant(props) {\n  const {\n    id,\n    nickname,\n    species,\n    h2oFrequency,\n    deletePlant,\n    lastWaterTime = new Date(\"Aug 24, 2021 16:37:52\").getTime(),\n  } = props;\n\n  const { url } = useRouteMatch();\n  \n  const msPerWatering = msPerDay * h2oFrequency;\n  const timeSinceWatered = Date.now() - lastWaterTime;\n  \n  const calculateMsLeft = () => msPerWatering - timeSinceWatered;\n  \n  const [daysLeft, hoursLeft, minutesLeft, secondsLeft, msLeft] = useCountdown(calculateMsLeft)\n\n  const timerReset = () => {};\n\n  const handleDelete = () => deletePlant(id);\n\n  return (\n    <div className=\"border rounded-lg flex w-1/4 m-4 shadow-lg  bg-green-300\">\n      <div className=\"flex flex-col p-6\">\n        <h3 className=\"text-2xl text-left font-bold\">{nickname}</h3>\n        <h6 className=\"text-lg text-left italic\">{species}</h6>\n        <h6 className=\"text-sm text-left\">\n          Water Frequency: {h2oFrequency} days\n        </h6>\n        {msLeft > 0 ?  \n          <h6 className=\"text-sm text-left animate-pulse\">\n            {daysLeft} days, <br/>\n            {hoursLeft} hours, <br/>\n            {minutesLeft} minutues, <br/>\n            {secondsLeft} seconds. <br/>\n          </h6>\n          : <h2>Water it!!!</h2>}\n        <button\n          onClick={timerReset}\n          className=\"border ml-16 text-md bg-blue-200 hover:bg-blue-300 mt-4 p-2 rounded-md w-2/3\"\n        >\n          Water Plant\n        </button>\n      </div>\n        <div data-testid=\"delete\" onClick={handleDelete} className=\"cursor-pointer p-2\"> ❌</div>\n        <Link to={`${url}/update/${id}`} className=\"cursor-pointer p-2\">✏️</Link>\n    </div>\n  );\n}\n\nexport default connect(null, { deletePlant })(Plant);\n","import * as yup from 'yup';\n\nconst plantSchema = yup.object().shape({\n    nickname: yup\n        .string()\n        .trim()\n        .required('Nickname is required')\n        .min(2, 'Nickname must be at least 2 characters'),\n    species: yup\n        .string()\n        .trim()\n        .required('Species is required'),\n    h2oFrequency: yup\n        .string()\n        .oneOf(['1', '3', '5', '7'], 'Water Frequency is required'),\n})\n\nexport default plantSchema;","import React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport useValidation from \"../hooks/useValidation\";\nimport plantSchema from \"../schema/plantSchema\";\nimport { connect } from \"react-redux\";\nimport { addPlant } from \"../actions\";\nimport ErrorMessage from \"./ErrorMessage\";\n\n\nconst initalFormValues = {\n  id: \"\",\n  nickname: \"\",\n  species: \"\",\n  h2oFrequency: \"\",\n};\n\nexport function AddPlant(props) {\n\n  const { addPlant } = props;\n  const [formValues, handleChange] = useForm(initalFormValues)\n  const [disabled, formErrors, changeAndValidate] = useValidation(formValues, plantSchema, handleChange);\n\n\n  const submit = (e) => {\n    e.preventDefault()\n    addPlant(formValues)\n  }\n\n  return (\n    <section>\n      ▼\n        <form className=\" p-8 flex flex-col border-8\" onSubmit={submit}>\n          <label className=\" text-lg font-bold flex flex-col items-center justify-center\">\n            What is your plant's nickname?\n            <input\n              className=\"border-4\"\n              name=\"nickname\"\n              type=\"text\"\n              placeholder=\"Add Nickname\"\n              value={formValues.nickname}\n              onChange={changeAndValidate}  />\n          </label>\n          <label className=\" text-lg font-bold  flex flex-col items-center justify-center\">\n            What species is the plant?\n            <input className=\"border-4\" type=\"text\" placeholder=\"Add Species\" name=\"species\" value={formValues.species}\n              onChange={changeAndValidate} />\n            <label className=\" text-lg font-bold flex flex-col items-center justify-center\">\n              How often do you give it water?\n              <select className=\"border-4\" name=\"h2oFrequency\" value={formValues.h2oFrequency}\n                onChange={changeAndValidate}>\n                <option value=''>--Select an Option--</option>\n                <option value=\"1\">Everyday</option>\n                <option value=\"3\">Every three days</option>\n                <option value=\"5\">Every five days</option>\n                <option value=\"7\">Once a week</option>\n              </select>\n              <button disabled={disabled} className=\"border m-4 p-2 text-md bg-yellow-200 hover:bg-yellow-300 rounded-md\">Submit</button>\n              <ErrorMessage formErrors={formErrors}/>\n            </label>\n          </label>\n        </form>\n    </section>\n  )\n}\n\nexport default connect(null, { addPlant })(AddPlant);\n\n","import React, { useState, useEffect } from \"react\";\nimport Plant from \"./Plant\";\nimport AddPlant from \"./AddPlant\";\nimport { connect } from \"react-redux\";\nimport { getPlants } from \"../actions\";\n\n\n\nfunction PlantList(props) {\n  const { getPlants, plants } = props;\n\n  useEffect(() => {\n    getPlants()\n  }, [])\n\n  const [revealForm, setRevealForm] = useState(false);\n  const toggleForm = () => setRevealForm(!revealForm)\n\n  return (\n    <div className=\"flex w-90 justify-center flex-col text-center items-center mt-10\">\n      <h2 className=\"text-5xl font-bold m-4\"> Your Garden </h2>\n      <button onClick={toggleForm} className=\"border p-2 text-md bg-yellow-200 hover:bg-yellow-300 rounded-md\">\n        Add A Plant\n      </button>\n\n      {revealForm && <AddPlant/>}\n\n      <div className=\"w-11/12 mt-6 h-full border-8 flex-wrap flex justify-center items-start\">\n        {plants?.map(plant =>\n            <Plant {...plant} key={plant.id}/>\n        )}\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  plants: state.plants\n})\n\nexport default connect(mapStateToProps, { getPlants })(PlantList);\n","import React from \"react\";\n\nfunction Marketing(props) {\n  return (\n    <div className=\"body\">\n      <div className=\"hero-image\">\n        <div className=\"hero-content\">\n          <h2>Water, worry-free!</h2>\n          <p>\n            Sign up below to get consistent reminders to keep your plants happy\n            and healthy...\n          </p>\n          <button>Sign up Today!</button>\n        </div>\n      </div>\n      <div className=\"spacer\"></div>\n      <div className=\"IconRow\">\n        <div className=\"Icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 logo\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"\n            />\n          </svg>\n        </div>\n        <div className=\"iconRowContent\">\n          <p className=\"rowContent\">\n            Simply add your plants, their names, and their watering frequency to\n            start keeping track of your watering schedule\n          </p>\n        </div>\n      </div>\n\n      <div className=\"IconRow\">\n        <div className=\"Icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 logo\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M21 3l-6 6m0 0V4m0 5h5M5 3a2 2 0 00-2 2v1c0 8.284 6.716 15 15 15h1a2 2 0 002-2v-3.28a1 1 0 00-.684-.948l-4.493-1.498a1 1 0 00-1.21.502l-1.13 2.257a11.042 11.042 0 01-5.516-5.517l2.257-1.128a1 1 0 00.502-1.21L9.228 3.683A1 1 0 008.279 3H5z\"\n            />\n          </svg>\n        </div>\n        <div className=\"iconRowContent\">\n          <p className=\"rowContent\">\n            Get phone notifications when your plants are thirsty and ready to be\n            watered!\n          </p>\n        </div>\n      </div>\n\n      <div className=\"IconRow\">\n        <div className=\"Icon\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6 logo\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5\"\n            />\n          </svg>\n        </div>\n        <div className=\"iconRowContent\">\n          <p className=\"rowContent\">\n            Relax and enjoy the lucious foliage of your plants as all of your\n            watering schedule needs are handled for you!\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Marketing;\n","import * as yup from 'yup';\n\nconst updateUserSchema = yup.object().shape({\n    phonenumber: yup\n        .number()\n})\n\nexport default updateUserSchema;\n","\nimport React from \"react\";\nimport useForm from \"../hooks/useForm\";\nimport { connect } from \"react-redux\";\nimport { updateUser } from \"../actions\";\nimport updateUserSchema from \"../schema/updateUserSchema\";\nimport useValidation from \"../hooks/useValidation\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nconst initialData = { phonenumber: \"\" };\n\nfunction UpdateUser(props) {\n  const [userPhone, handleChange] = useForm(initialData);\n  const [disabled, formErrors, changeAndValidate] = useValidation(userPhone, updateUserSchema, handleChange)\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    updateUser(userPhone);\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>\n          New Phone Number:\n          <input\n            onChange={changeAndValidate}\n            type=\"tel\"\n            name=\"phonenumber\"\n            value={userPhone.phonenumber}\n          ></input>\n        </label>\n        <ErrorMessage formErrors={formErrors}/>\n        <button disabled={disabled} type=\"submit\">Update</button>\n      </form>\n    </div>\n  );\n}\n\nexport default connect(null, { updateUser })(UpdateUser);\n","import \"./styles/App.css\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n// import UpdatePlant from \"./components/UpdatePlant\";\nimport Login from \"./components/Login\";\nimport SignUp from \"./components/SignUp\";\nimport PlantList from \"./components/PlantList\";\nimport Marketing from \"./components/Marketing\";\nimport UpdateUser from \"./components/UpdateUser\";\nimport { connect } from \"react-redux\";\n\nfunction App(props) {\n  const { authenticated } = props;\n\n  return (\n    <div>\n      <header className=\"Header-bar\">\n        {/* <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          fill=\"none\"\n          className=\"Nav-icon\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n          />\n        </svg> */}\n        <nav className=\"Nav-bar\">\n          {authenticated ? (\n            <>\n              <Link>Logout</Link>\n              <Link to=\"/updateuser\">Update User</Link>\n              <Link to=\"/plantlist\">Plant List</Link>\n            </>\n          ) : (\n            <>\n              <Link to=\"/login\">\n                <button>Login</button>\n              </Link>\n              <Link to=\"/signup\">\n                <button>Sign Up</button>\n              </Link>\n            </>\n          )}\n        </nav>\n      </header>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/signup\">\n          <SignUp />\n        </Route>\n\n        <Route path=\"/plantlist\">\n          <PlantList />\n        </Route>\n\n        <Route path=\"/updateuser\">\n          <UpdateUser />\n        </Route>\n\n        <Route exact path=\"/\">\n          <Marketing />\n        </Route>\n\n        {/* <Route path='/plantlist/update/:id'>\n          <UpdatePlant />\n        </Route> */}\n      </Switch>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  authenticated: state.authenticated,\n});\n\nexport default connect(mapStateToProps)(App);\n","\nconst dummyData = [\n    {\n      id: 1,\n      nickname: \"Dan\",\n      species: \"Sunflower\",\n      h2oFrequency: \"7\",\n    },\n    { id: 2, nickname: \"Steve\", species: \"Daisy\", h2oFrequency: \"1\" },\n    {\n      id: 3,\n      nickname: \"Roger\",\n      species: \"Rose\",\n      h2oFrequency: \"3\",\n    },\n];\nexport default dummyData;\n\nexport const mockPlant = {\n  id: 33,\n  nickname: \"nick-name\",\n  species: \"species\",\n  h2oFrequency: 1,\n  lastWaterTime: new Date(\"Aug 24, 2021 16:37:52\").getTime(),\n\n}","import {\n  CHECK_AUTHORIZATION,\n  AUTHENTICATE,\n  FINISH_REQUEST,\n  START_REQUEST,\n  GET_PLANTS,\n  GET_PLANT,\n  ADD_PLANT,\n  DELETE_PLANT,\n  UPDATE_PLANT,\n  LOGOUT,\n} from \"../actions\";\nimport dummyData from \"../mock\";\n\nconst initialState = {\n  authenticated: localStorage.getItem(\"token\") || false,\n  makingRequest: false,\n  plants: dummyData,\n  plantToUpdate: {}\n};\n\nconst reducer = (state = initialState, actions) => {\n  switch (actions.type) {\n    case CHECK_AUTHORIZATION:\n      return {\n        ...state,\n        authenticated: actions.payload,\n      };\n    case START_REQUEST:\n      return {\n        ...state,\n        makingRequest: true,\n      };\n    case FINISH_REQUEST:\n      return {\n        ...state,\n        makingRequest: false,\n      };\n    case AUTHENTICATE:\n      localStorage.setItem(\"token\", actions.payload.created_at);\n      return {\n        ...state,\n        authenticated: true\n      };\n    case ADD_PLANT:\n      return {\n        ...state,\n        plants: [...state.plants, actions.payload]\n      }\n    case GET_PLANTS:\n      return {\n        ...state,\n        plants: actions.payload\n      }\n    case GET_PLANT:\n      return {\n        ...state,\n        plantToUpdate: actions.payload\n      }\n    case DELETE_PLANT:\n      return {\n        ...state,\n        plants: state.plants.filter(plant => \n          plant.id !== actions.payload\n        )\n      }\n    case UPDATE_PLANT:\n      return {\n        ...state,\n        plants: state.plants.map(plant => \n          plant.id !== actions.payload.id ? plant : actions.payload\n        )\n      }\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return { ...state, authenticated: false, makingRequest: false };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport logger from \"redux-logger\";\nimport reducer from \"./reducers\";\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n        <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}